global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'jobs-app-monitor'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Jobs Application - Production
  - job_name: 'jobs-app-production'
    static_configs:
      - targets: ['192.168.68.89:9090']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      format: ['prometheus']
    basic_auth:
      username: 'metrics'
      password: 'secure_metrics_password'

  # Jobs Application - Staging
  - job_name: 'jobs-app-staging'
    static_configs:
      - targets: ['192.168.68.89:9091']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      format: ['prometheus']

  # Jobs Application - Development
  - job_name: 'jobs-app-development'
    static_configs:
      - targets: ['192.168.68.89:9092']
    scrape_interval: 60s
    metrics_path: /metrics
    params:
      format: ['prometheus']

  # Podman containers health check
  - job_name: 'podman-health'
    static_configs:
      - targets: ['192.168.68.89:8080']
    scrape_interval: 60s
    metrics_path: /health
    scheme: http

  # Custom application metrics
  - job_name: 'jobs-app-custom-metrics'
    static_configs:
      - targets: ['192.168.68.89:80', '192.168.68.89:8080']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scheme: http
    scrape_timeout: 10s

  # Database metrics (if PostgreSQL exporter is available)
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['192.168.68.89:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis metrics (if Redis exporter is available)
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['192.168.68.89:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx/Load Balancer metrics (if available)
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['192.168.68.89:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://192.168.68.89/health
        - http://192.168.68.89:8080/health
        - http://192.168.68.89/api/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL certificate monitoring
  - job_name: 'blackbox-ssl'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - 192.168.68.89:443
        - 192.168.68.89:80
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://remote-storage:9201/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration (optional)
# remote_read:
#   - url: "http://remote-storage:9201/read"